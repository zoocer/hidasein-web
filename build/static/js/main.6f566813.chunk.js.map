{"version":3,"sources":["utils/commonConfig.js","Welcome.js","utils/getFlag.js","components/HDCard.js","CardList.js","components/HDTextField.js","components/HDSendButton.js","CardInput.js","components/CommonFooter.js","App.js","serviceWorker.js","index.js"],"names":["hostname","window","location","isTest","indexOf","apiDomain","commonConfig","emptyText","timeFormat","dateFormat","dateFormat2","errMsg","Welcome","react_default","a","createElement","CircularProgress","flag","code","res","img","name","emojiInfo","emojiFlags","countryCode","emoji","HDCard","date","moment","format","_this$props","this","props","card","classes","Card","className","CardContent","Grid","container","direction","alignItems","item","xs","justify","role","getFlag","Typography","component","content","React","Component","withStyles","fontSize","color","& .text-time","fontFamily","& .text-content","wordBreak","CardList","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","loadNextPage","apiUrl","concat","_this$state","state","page","pageSize","cards","loadingStatus","setState","reqData","axios","get","params","then","data","_","hasMore","length","Masonry","itemSelector","_this$state2","loader","key","root","react_infinite_scroller_default","pageStart","loadMore","spacing","map","Fade","_id","in","timeout","md","style","width","components_HDCard","theme","flexGrow","backgroundColor","padding","whiteSpace","HDTextField","multilined","handleChanged","event","defineProperty","target","value","TextField","multiline","textField","margin","onChange","& .MuiInputBase-root","& .MuiInput-underline:before","borderBottom","SendButton","onClickBtn","handleClickCb","_this2","onClick","defaultProps","cursor","& .circle-bot","height","borderRadius","& .circle-mid","& .circle-top","CardInput","handleClickButton","currentInput","loaddingStatus","url","post","history","push","alert","msg","getCodes","Fragment","Container","maxWidth","title","variant","inputWrap","components_HDTextField","handleInput","sendBtn","HDSendButton","position","top","marginTop","right","bottom","CommonFooter","reqGeoApi","clientGeoInfo","localCountryInfo","country","footer","Date","getFullYear","& .container","& .text-version","textAlign","& .country-info","App","reqCheckTalkedApi","routeList","talked","path","commponent","react_router_dom","react_router","exact","from","to","components_CommonFooter","display","minHeight","flexDirection","Boolean","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qOAEQA,EAAaC,OAAOC,SAApBF,SACFG,GAAuC,IAA9BH,EAASI,QAAQ,QAG5BC,EAAY,IAFmC,IAAnCL,EAASI,QAAQ,eAM/BC,EAAY,oBAGC,IAAAC,EAAA,CACbH,SACAE,YACAE,UAAW,IACXC,WAAY,sBACZC,WAAY,aACZC,YAAa,WACbC,OAAQ,yECbKC,EAJC,kBACdC,EAAAC,EAAAC,cAACC,EAAA,EAAD,+GCWaC,EAbF,SAACC,GACZ,IAAMC,EAAM,CACVC,IAAK,eACLC,KAAM,UAER,GAAIH,EAAM,CACR,IAAMI,EAAYC,IAAWC,YAAYN,GACzCC,EAAIC,IAAME,EAAUG,MACpBN,EAAIE,KAAOC,EAAUD,KAEvB,OAAOF,GCSHO,qLACOC,GACT,OAAOC,IAAOD,GAAME,OAAO,yDAEpB,IAAAC,EACmBC,KAAKC,MAAvBC,EADDH,EACCG,KAAMC,EADPJ,EACOI,QAEd,OACErB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMC,UAAWF,EAAQD,MACvBpB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,KACExB,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,WAAW,UACzC5B,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACb9B,EAAAC,EAAAC,cAAA,QAAMqB,UAAU,aAAaL,KAAKtB,WAAWwB,EAAKN,QAEpDd,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACI,GAAI,EAAGC,QAAQ,YAClC/B,EAAAC,EAAAC,cAAA,QAAM8B,KAAK,OAAOC,EAAQb,EAAKf,MAAME,OAGzCP,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAYC,UAAU,IAAIZ,UAAU,gBACjCH,EAAKgB,kBAnBGC,IAAMC,WA2BZC,cAzCA,CACbnB,KAAM,CACJoB,SAAU,GACVC,MAAO,OACPC,eAAgB,CACdC,WAAY,oBAEdC,kBAAmB,CACjBD,WAAY,sBACZE,UAAW,gBAgCFN,CAAmB1B,GCxB5BiC,cACJ,SAAAA,EAAY3B,GAAO,IAAA4B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA9B,KAAA4B,IACjBC,EAAAC,OAAAE,EAAA,EAAAF,CAAA9B,KAAA8B,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAlC,KAAMC,KAURkC,aAAe,WACb,IAAMC,EAAM,GAAAC,OAAM9D,EAAaD,UAAnB,UADOgE,EAE8BT,EAAKU,MAA9CC,EAFWF,EAEXE,KAAMC,EAFKH,EAELG,SAAUC,EAFLJ,EAEKI,MAFLJ,EAEYK,eAM/Bd,EAAKe,SAAS,CACZD,eAAe,GACd,WACD,IAAME,EAAU,CACdL,OACAC,YAEFK,IAAMC,IAAIX,EAAQ,CAChBY,OAAQH,IACPI,KAAK,SAAA7D,GAAO,IACL8D,EAAS9D,EAAI8D,KAAbA,KACRrB,EAAKe,SAAS,CACZF,MAAOS,SAAST,EAAOQ,GACvBV,KAAMA,EAAO,EACbY,QAASF,EAAKG,QAAUZ,EACxBE,eAAe,GACd,WACD,IAAIW,QAAQ,cAAe,CACzBC,aAAc,4BAnCtB1B,EAAKU,MAAQ,CACXC,KAAM,EACNC,SAAU,GACVC,MAAO,GACPU,SAAS,EACTT,eAAe,GAPAd,wEA4CV,IAAA2B,EACoBxD,KAAKuC,MAAxBG,EADDc,EACCd,MAAOU,EADRI,EACQJ,QACPjD,EAAYH,KAAKC,MAAjBE,QACFsD,EACJ3E,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAkByE,IAAK,IAIzB,OACE5E,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAMF,UAAWF,EAAQwD,MACvB7E,EAAAC,EAAAC,cAAC4E,EAAA7E,EAAD,CACE8E,UAAW,EACXC,SAAU9D,KAAKmC,aACfiB,QAASA,EACTK,OAAQA,GAER3E,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CACEC,WAAS,EACTuD,QAAS,EACT1D,UAAU,cAETqC,EAAMsB,IAAI,SAAA9D,GAET,OACEpB,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAMP,IAAKxD,EAAKgE,IAAKC,IAAI,EAAMC,QAAS,KACtCtF,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIyD,GAAI,EAAGhE,UAAU,kBAAkBiE,MAAO,CAAEC,MAAO,SACpEzF,EAAAC,EAAAC,cAACwF,EAAD,CAAQnE,UAAWF,EAAQD,KAAMA,KAAMA,kBAvEpCiB,IAAMC,WAmFdC,cA7FA,SAAAoD,GAAK,MAAK,CACvBd,KAAM,CACJe,SAAU,EACVC,gBAAiB,UACjBC,QAAS,UAEX1E,KAAM,CACJ2E,WAAY,YAsFDxD,CAAmBO,qCCxF5BkD,6MACJvC,MAAQ,CACNwC,WAAY,gBAGdC,cAAgB,SAAA1F,GAAI,OAAI,SAAA2F,GACtBpD,EAAKe,SAALd,OAAAoD,EAAA,EAAApD,CAAA,GACGxC,EAAO2F,EAAME,OAAOC,kFAIhB,IACCjF,EAAYH,KAAKC,MAAjBE,QAER,OACErB,EAAAC,EAAAC,cAACqG,EAAA,EAAD,CACEC,WAAS,EACTjF,UAAWF,EAAQoF,UACnBC,OAAO,SACPC,SAAUzF,KAAKC,MAAMwF,SACrBL,MAAOpF,KAAKC,MAAMmF,eApBAjE,IAAMC,WA8BjBC,cA5CA,SAAAoD,GAAK,MAAK,CACvBc,UAAW,CAGThB,MAAO,OACPmB,uBAAwB,CACtBpE,SAAU,SACVC,MAAO,WAEToE,+BAAgC,CAC9BC,aAAc,wBAkCLvE,CAAmByD,GClB5Be,6MAUJC,WAAa,WACXjE,EAAK5B,MAAM8F,yFAGJ,IAAAC,EAAAhG,KACCG,EAAYH,KAAKC,MAAjBE,QAER,OACErB,EAAAC,EAAAC,cAAA,OACEiH,QAAS,kBAAMD,EAAKF,cACpBzF,UAAWF,EAAQwD,MAEnB7E,EAAAC,EAAAC,cAAA,OAAKqB,UAAU,eACfvB,EAAAC,EAAAC,cAAA,OAAKqB,UAAU,eACfvB,EAAAC,EAAAC,cAAA,OAAKqB,UAAU,uBAxBEc,IAAMC,WAAzByE,EAKGK,aAAe,CAEpBH,cAAe,cAuBJ1E,kBAzDA,SAAAoD,GAAK,MAAK,CACvBd,KAAM,CACJwC,OAAQ,UACRC,gBAAiB,CACfzB,gBAAiB,UACjBJ,MAAO,OACP8B,OAAQ,OACRb,OAAQ,EACRc,aAAc,OAEhBC,gBAAiB,CACf5B,gBAAiB,OACjBJ,MAAO,OACP8B,OAAQ,OACRb,OAAQ,gBACRc,aAAc,OAEhBE,gBAAiB,CACf7B,gBAAiB,UACjBJ,MAAO,OACP8B,OAAQ,OACRb,OAAQ,iBACRc,aAAc,UAmCLjF,CAAmBwE,GC3B5BY,cACJ,SAAAA,EAAYxG,GAAO,IAAA4B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA9B,KAAAyG,IACjB5E,EAAAC,OAAAE,EAAA,EAAAF,CAAA9B,KAAA8B,OAAAG,EAAA,EAAAH,CAAA2E,GAAAvE,KAAAlC,KAAMC,KAiBRyG,kBAAoB,WAAM,IAAApE,EACiBT,EAAKU,MAAtCoE,EADgBrE,EAChBqE,aAAcC,EADEtE,EACFsE,eACtB,GAAqB,KAAjBD,IAAuBC,EAA3B,CAIA/E,EAAKe,SAAS,CACZgE,gBAAgB,IAElB,IAAMC,EAAG,GAAAxE,OAAM9D,EAAaD,UAAnB,UACTwE,IACGgE,KAAKD,EAAK,CACT3F,QAASyF,IAEV1D,KAAK,SAAA7D,GACJyC,EAAKe,SAAS,CACZgE,gBAAgB,IAFP,IAIH1D,EAAS9D,EAAT8D,KACU,MAAdA,EAAK/D,MACP0C,EAAKe,SAAS,CACZ+D,aAAc,KAEhB9E,EAAK5B,MAAM8G,QAAQC,KAAK,cAExBC,MAAM/D,EAAKgE,KAAO3I,EAAaK,YAzCrCiD,EAAKU,MAAQ,CAEXoE,aAAc,GAEdC,gBAAgB,GAND/E,4EAWjB,OAAOsB,SAASgE,0DAENlC,GACVjF,KAAK4C,SAAS,CACZ+D,aAAc1B,EAAME,OAAOC,yCAiCtB,IAAAY,EAAAhG,KACCG,EAAYH,KAAKC,MAAjBE,QACAyG,EAAmB5G,KAAKuC,MAAxBqE,eAER,OACE9H,EAAAC,EAAAC,cAACF,EAAAC,EAAMqI,SAAP,KACEtI,EAAAC,EAAAC,cAACqI,EAAA,EAAD,CAAWC,SAAS,KAAKjH,UAAWF,EAAQwD,MAC1C7E,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAYX,UAAWF,EAAQoH,MAAOC,QAAQ,MAA9C,cAIA1I,EAAAC,EAAAC,cAAA,OAAKqB,UAAWF,EAAQsH,WACtB3I,EAAAC,EAAAC,cAAC0I,EAAD,CACEtC,MAAOpF,KAAKuC,MAAMoE,aAClBlB,SAAU,SAAAR,GAAK,OAAIe,EAAK2B,YAAY1C,OAGnC2B,GACD9H,EAAAC,EAAAC,cAAA,OAAKqB,UAAWF,EAAQyH,SACtB9I,EAAAC,EAAAC,cAAC6I,EAAD,CACE9B,cAAe,kBAAMC,EAAKU,wBAa9BE,GACA9H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAkBoB,UAAWF,EAAQyH,oBAnF3BzG,IAAMC,WA+FfC,cAnHA,SAAAoD,GAAK,MAAK,CACvBd,KAAM,CACJmE,SAAU,WACVC,IAAK,QAEPR,MAAO,CACLhG,MAAO,UACPE,WAAY,uBAEdgG,UAAW,CACTO,UAAW,QACXF,SAAU,YAEZF,QAAS,CACPE,SAAU,WACVG,MAAO,EACPC,OAAQ,UAmGG7G,CAAmBoF,GCpG5B0B,cACJ,SAAAA,EAAYlI,GAAO,IAAA4B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA9B,KAAAmI,IACjBtG,EAAAC,OAAAE,EAAA,EAAAF,CAAA9B,KAAA8B,OAAAG,EAAA,EAAAH,CAAAqG,GAAAjG,KAAAlC,KAAMC,KAURmI,UAAY,WACV,IAAMhG,EAAM,GAAAC,OAAM9D,EAAaD,UAAnB,cACZwE,IAAMC,IAAIX,GAAQa,KAAK,SAAA7D,GAAO,IACpB8D,EAAS9D,EAAI8D,KAAbA,KACRrB,EAAKe,SAAS,CACZyF,cAAenF,OAdnBrB,EAAKU,MAAQ,CACX8F,cAAe,MAHAxG,mFAQjB7B,KAAKoI,6CAaE,IACCjI,EAAYH,KAAKC,MAAjBE,QACAkI,EAAkBrI,KAAKuC,MAAvB8F,cACFC,EAAmBvH,EAAQsH,GAAiBA,EAAcE,SAEhE,OACEzJ,EAAAC,EAAAC,cAAA,UAAQqB,UAAWF,EAAQqI,QACzB1J,EAAAC,EAAAC,cAAA,OAAKqB,UAAU,aACbvB,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAYwG,QAAQ,QAAQnH,UAAU,gBAAtC,SACK,IAAIoI,MAAOC,cADhB,cAGA5J,EAAAC,EAAAC,cAAA,QAAMqB,UAAU,gBACdvB,EAAAC,EAAAC,cAAA,QAAM8B,KAAK,OAAOwH,EAAiBjJ,KACnCP,EAAAC,EAAAC,cAAA,YAAOsJ,EAAiBhJ,gBAnCT6B,IAAMC,WA2ClBC,cAhEA,SAAAoD,GAAK,MAAK,CACvB+D,OAAQ,CACN5D,QAASH,EAAMV,QAAQ,GACvBiE,UAAW,OACXvG,WAAY,qBACZH,SAAU,GACVC,MAAO,UACPoH,eAAgB,CACdb,SAAU,WACVlD,QAAS,SAEXgE,kBAAmB,CACjBC,UAAW,UAEbC,kBAAmB,CACjBhB,SAAU,WACVG,MAAO,MACPC,OAAQ,MA+CC7G,CAAmB8G,GC9C5BY,cACJ,SAAAA,EAAY9I,GAAO,IAAA4B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA9B,KAAA+I,IACjBlH,EAAAC,OAAAE,EAAA,EAAAF,CAAA9B,KAAA8B,OAAAG,EAAA,EAAAH,CAAAiH,GAAA7G,KAAAlC,KAAMC,KAiBR+I,kBAAoB,WAClB,IAAM5G,EAAM,GAAAC,OAAM9D,EAAaD,UAAnB,gBACN2K,EAAcpH,EAAKU,MAAnB0G,UAENnG,IAAMC,IAAIX,GAAQa,KAAK,SAAA7D,GAAO,IACpB8D,EAAS9D,EAAI8D,KAAbA,KAGN+F,EAFE/F,EAAKgG,OAEK,CACV,CACEC,KAAM,IACNC,WAAYxH,IAKJ,CACV,CACEuH,KAAM,IACNC,WAAY3C,GAEd,CACE0C,KAAM,YACNC,WAAYxH,IAIlBC,EAAKe,SAAS,CACZqG,iBA5CJpH,EAAKU,MAAQ,CACX2G,QAAQ,EACRD,UAAW,CACT,CACEE,KAAM,IACNC,WAAYvK,KAPDgD,mFAcjB7B,KAAKgJ,qDAqCE,IACC7I,EAAYH,KAAKC,MAAjBE,QACA8I,EAAcjJ,KAAKuC,MAAnB0G,UAER,OACEnK,EAAAC,EAAAC,cAACqK,EAAA,EAAD,KACEvK,EAAAC,EAAAC,cAAA,OAAKqB,UAAWF,EAAQwD,MACtB7E,EAAAC,EAAAC,cAACsK,EAAA,EAAD,KAEIL,EAAUjF,IAAI,SAAArD,GAAI,OAChB7B,EAAAC,EAAAC,cAACsK,EAAA,EAAD,CAAO5F,IAAK/C,EAAKwI,KAAMA,KAAMxI,EAAKwI,KAAMI,OAAK,EAACtI,UAAWN,EAAKyI,eAMlEtK,EAAAC,EAAAC,cAACsK,EAAA,EAAD,CAAUE,KAAK,IAAIC,GAAG,OAExB3K,EAAAC,EAAAC,cAAC0K,EAAD,eAtEQvI,IAAMC,WA6ETC,cAtFA,SAAAoD,GAAK,MAAK,CACvBd,KAAM,CACJgG,QAAS,OACTC,UAAW,QACXC,cAAe,SACflF,gBAAiB,aAiFNtD,CAAmB0H,GC3Fde,QACW,cAA7B5L,OAAOC,SAASF,UAEe,UAA7BC,OAAOC,SAASF,UAEhBC,OAAOC,SAASF,SAAS8L,MACvB,2DCZNC,IAASC,OAAOnL,EAAAC,EAAAC,cAACkL,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtH,KAAK,SAAAuH,GACjCA,EAAaC","file":"static/js/main.6f566813.chunk.js","sourcesContent":["// 通用配置\n\nconst { hostname } = window.location;\nconst isTest = hostname.indexOf('test') !== -1;\nconst isLocal = hostname.indexOf('localhost') !== -1;\n\nlet apiDomain = '';\n\nif (isLocal) {\n  // 本地开发环境\n  apiDomain = '//localhost:4141';\n}\n\nexport default {\n  isTest,\n  apiDomain,\n  emptyText: '-',\n  timeFormat: 'YYYY-MM-DD HH:mm:ss',\n  dateFormat: 'YYYY-MM-DD',\n  dateFormat2: 'YYYYMMDD',\n  errMsg: '系统错误，请稍后再试'\n};\n","import React from 'react'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nconst Welcome = () => (\n  <CircularProgress />\n);\n\nexport default Welcome\n","import emojiFlags from 'emoji-flags'\n\nconst flag = (code) => {\n  const res = {\n    img: '🌍',\n    name: 'unknow'\n  }\n  if (code) {\n    const emojiInfo = emojiFlags.countryCode(code)\n    res.img = emojiInfo.emoji\n    res.name = emojiInfo.name\n  }\n  return res\n}\n\nexport default flag\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport { CardContent, Card, Grid } from '@material-ui/core'\nimport moment from 'moment'\nimport getFlag from '../utils/getFlag'\n\nconst styles = {\n  card: {\n    fontSize: 14,\n    color: '#333',\n    '& .text-time': {\n      fontFamily: 'STSongti-SC-Bold'\n    },\n    '& .text-content': {\n      fontFamily: 'STSongti-SC-Regular',\n      wordBreak: 'break-word'\n    }\n  }\n}\n\nclass HDCard extends React.Component {\n  dateFormat(date) {\n    return moment(date).format('YYYY·M·D HH:mm')\n  }\n  render() {\n    const { card, classes } = this.props\n\n    return (\n      <Card className={classes.card}>\n        <CardContent>\n          <Grid container direction=\"row\" alignItems=\"center\">\n            <Grid item xs={9}>\n              <span className=\"text-time\">{this.dateFormat(card.date)}</span>\n            </Grid>\n            <Grid item container xs={3} justify=\"flex-end\">\n              <span role=\"img\">{getFlag(card.code).img}</span>\n            </Grid>\n          </Grid>\n          <Typography component=\"p\" className=\"text-content\">\n            {card.content}\n          </Typography>\n        </CardContent>\n      </Card>\n    )\n  }\n}\n\nexport default withStyles(styles)(HDCard)\n","/* eslint-disable no-undef */\nimport React from 'react'\nimport * as _ from 'lodash'\nimport axios from 'axios'\n\nimport Grid from '@material-ui/core/Grid'\nimport Fade from '@material-ui/core/Fade'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { withStyles } from '@material-ui/core/styles'\nimport commonConfig from './utils/commonConfig'\n\nimport InfiniteScroll from 'react-infinite-scroller'\nimport HDCard from './components/HDCard'\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: '#f9f9f9',\n    padding: '5% 10%'\n  },\n  card: {\n    whiteSpace: 'nowrap'\n  },\n})\nclass CardList extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      page: 0,\n      pageSize: 10,\n      cards: [],\n      hasMore: true,\n      loadingStatus: false,\n    }\n  }\n\n  loadNextPage = () => {\n    const apiUrl = `${commonConfig.apiDomain}/talks`\n    const { page, pageSize, cards, loadingStatus } = this.state\n\n    if (loadingStatus) {\n      return\n    }\n\n    this.setState({\n      loadingStatus: true\n    }, () => {\n      const reqData = {\n        page,\n        pageSize\n      }\n      axios.get(apiUrl, {\n        params: reqData,\n      }).then(res => {\n        const { data } = res.data\n        this.setState({\n          cards: _.concat(cards, data),\n          page: page + 1,\n          hasMore: data.length >= pageSize,\n          loadingStatus: false\n        }, () => {\n          new Masonry('.msnry-grid', {\n            itemSelector: '.msnry-grid-item',\n          });\n        })\n      })\n    })\n  }\n\n  render() {\n    const { cards, hasMore } = this.state\n    const { classes } = this.props\n    const loader = (\n      <CircularProgress key={0} />\n    )\n    // const fade = true\n    // let time = 0\n    return (\n      <Grid className={classes.root}>\n        <InfiniteScroll\n          pageStart={0}\n          loadMore={this.loadNextPage}\n          hasMore={hasMore}\n          loader={loader}\n        >\n          <Grid\n            container\n            spacing={3}\n            className=\"msnry-grid\"\n          >\n            {cards.map(card => {\n              // time += 200\n              return (\n                <Fade key={card._id} in={true} timeout={300}>\n                  <Grid item xs={12} md={3} className=\"msnry-grid-item\" style={{ width: '100%' }}>\n                    <HDCard className={classes.card} card={card} />\n                  </Grid>\n                </Fade>\n              )\n            })}\n          </Grid>\n        </InfiniteScroll>\n      </Grid>\n    )\n  }\n}\n\nexport default withStyles(styles)(CardList)\n","import React from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst styles = theme => ({\n  textField: {\n    // marginLeft: theme.spacing.unit,\n    // marginRight: theme.spacing.unit,\n    width: '100%',\n    '& .MuiInputBase-root': {\n      fontSize: '2.5rem',\n      color: '#2D0706'\n    },\n    '& .MuiInput-underline:before': {\n      borderBottom: '1px solid #F1F1F1'\n    }\n  }\n})\nclass HDTextField extends React.Component {\n  state = {\n    multilined: 'Controlled'\n  }\n\n  handleChanged = name => event => {\n    this.setState({\n      [name]: event.target.value\n    })\n  }\n\n  render() {\n    const { classes } = this.props\n\n    return (\n      <TextField\n        multiline\n        className={classes.textField}\n        margin=\"normal\"\n        onChange={this.props.onChange}\n        value={this.props.value}\n      />\n    )\n  }\n}\n\nHDTextField.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(HDTextField)\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport PropTypes from 'prop-types'\n\nconst styles = theme => ({\n  root: {\n    cursor: 'pointer',\n    '& .circle-bot': {\n      backgroundColor: '#2D0806',\n      width: '40px',\n      height: '40px',\n      margin: 0,\n      borderRadius: '50%'\n    },\n    '& .circle-mid': {\n      backgroundColor: '#fff',\n      width: '26px',\n      height: '26px',\n      margin: '-33px 0 0 7px',\n      borderRadius: '50%'\n    },\n    '& .circle-top': {\n      backgroundColor: '#2D0806',\n      width: '20px',\n      height: '20px',\n      margin: '-23px 0 0 10px',\n      borderRadius: '50%'\n    },\n  },\n})\n\nclass SendButton extends React.Component {\n  // 默认props\n  static propTypes = {\n    handleClickCb: PropTypes.func,\n  };\n  static defaultProps = {\n    // 点击回调\n    handleClickCb: () => {},\n  };\n\n  onClickBtn = () => {\n    this.props.handleClickCb();\n  }\n\n  render() {\n    const { classes } = this.props\n\n    return (\n      <div\n        onClick={() => this.onClickBtn()}\n        className={classes.root}\n      >\n        <div className=\"circle-bot\"></div>\n        <div className=\"circle-mid\"></div>\n        <div className=\"circle-top\"></div>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(SendButton)\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Container from '@material-ui/core/Container'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport * as _ from 'lodash'\nimport axios from 'axios'\n\nimport { getCodes } from 'country-list'\nimport commonConfig from './utils/commonConfig'\nimport HDTextField from './components/HDTextField'\nimport HDSendButton from './components/HDSendButton'\n\nconst styles = theme => ({\n  root: {\n    position: 'relative',\n    top: '25vh'\n  },\n  title: {\n    color: '#2D0706',\n    fontFamily: 'STSongti-SC-Regular'\n  },\n  inputWrap: {\n    marginTop: '150px',\n    position: 'relative'\n  },\n  sendBtn: {\n    position: 'absolute',\n    right: 0,\n    bottom: '25px'\n  },\n})\n\nclass CardInput extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      // 输入框\n      currentInput: '',\n      // loadding状态\n      loaddingStatus: false\n    }\n  }\n\n  randomCode() {\n    return _.sample(getCodes())\n  }\n  handleInput(event) {\n    this.setState({\n      currentInput: event.target.value\n    })\n  }\n  handleClickButton = () => {\n    const { currentInput, loaddingStatus } = this.state\n    if (currentInput === '' || loaddingStatus) {\n      return\n    }\n\n    this.setState({\n      loaddingStatus: true\n    })\n    const url = `${commonConfig.apiDomain}/talks`\n    axios\n      .post(url, {\n        content: currentInput\n      })\n      .then(res => {\n        this.setState({\n          loaddingStatus: false\n        })\n        const { data } = res;\n        if (data.code === 200) {\n          this.setState({\n            currentInput: ''\n          })\n          this.props.history.push('/cardList')\n        } else {\n          alert(data.msg || commonConfig.errMsg)\n        }\n      })\n  }\n\n  render() {\n    const { classes } = this.props\n    const { loaddingStatus } = this.state\n\n    return (\n      <React.Fragment>\n        <Container maxWidth=\"lg\" className={classes.root}>\n          <Typography className={classes.title} variant=\"h2\">\n            Hi Dasein:\n          </Typography>\n\n          <div className={classes.inputWrap}>\n            <HDTextField\n              value={this.state.currentInput}\n              onChange={event => this.handleInput(event)}\n            />\n            {\n              !loaddingStatus &&\n              <div className={classes.sendBtn}>\n                <HDSendButton\n                  handleClickCb={() => this.handleClickButton()}\n                />\n              </div>\n              // <Button\n              //   variant=\"contained\"\n              //   onClick={event => this.handleClickButton(event)}\n              //   color=\"primary\"\n              //   className={classes.sendBtn}\n              // >\n              //   <SendIcon />\n              // </Button>\n            }\n            {\n              loaddingStatus &&\n              <CircularProgress className={classes.sendBtn} />\n            }\n          </div>\n          {/* <Link className={classes.link} to=\"/cardList\">\n            Show All\n          </Link> */}\n        </Container>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default withStyles(styles)(CardInput)\n","import React from 'react'\nimport axios from 'axios'\n\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles'\nimport commonConfig from '../utils/commonConfig'\nimport getFlag from '../utils/getFlag'\n\nconst styles = theme => ({\n  footer: {\n    padding: theme.spacing(2),\n    marginTop: 'auto',\n    fontFamily: 'PingFangSC-Regular',\n    fontSize: 14,\n    color: '#333333',\n    '& .container': {\n      position: 'relative',\n      padding: '0 10%'\n    },\n    '& .text-version': {\n      textAlign: 'center'\n    },\n    '& .country-info': {\n      position: 'absolute',\n      right: '10%',\n      bottom: 0\n    }\n  }\n})\nclass CommonFooter extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      clientGeoInfo: null,\n    }\n  }\n\n  componentDidMount() {\n    this.reqGeoApi()\n  }\n\n  reqGeoApi = () => {\n    const apiUrl = `${commonConfig.apiDomain}/clientGeo`\n    axios.get(apiUrl).then(res => {\n      const { data } = res.data\n      this.setState({\n        clientGeoInfo: data\n      })\n    })\n  }\n\n  render() {\n    const { classes } = this.props\n    const { clientGeoInfo } = this.state\n    const localCountryInfo = getFlag(clientGeoInfo && clientGeoInfo.country)\n\n    return (\n      <footer className={classes.footer}>\n        <div className=\"container\">\n          <Typography variant=\"body1\" className=\"text-version\">\n            © {new Date().getFullYear()} HiDasein.\n          </Typography>\n          <span className=\"country-info\">\n            <span role=\"img\">{localCountryInfo.img}</span>\n            <span>{localCountryInfo.name}</span>\n          </span>\n        </div>\n      </footer>\n    )\n  }\n}\n\nexport default withStyles(styles)(CommonFooter)\n","import React from 'react'\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from 'react-router-dom'\nimport './App.css'\nimport { withStyles } from '@material-ui/core/styles'\nimport axios from 'axios'\nimport commonConfig from './utils/commonConfig'\n\nimport Welcome from './Welcome'\nimport CardList from './CardList'\nimport CardInput from './CardInput'\nimport CommonFooter from './components/CommonFooter'\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    minHeight: '100vh',\n    flexDirection: 'column',\n    backgroundColor: '#f9f9f9'\n  }\n})\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      talked: false,\n      routeList: [\n        {\n          path: '/',\n          commponent: Welcome\n        }\n      ]\n    }\n  }\n\n  componentDidMount() {\n    this.reqCheckTalkedApi();\n  }\n\n  // 请求判断是否发过talk接口\n  reqCheckTalkedApi = () => {\n    const apiUrl = `${commonConfig.apiDomain}/checkTalked`\n    let { routeList } = this.state\n\n    axios.get(apiUrl).then(res => {\n      const { data } = res.data\n      if (data.talked) {\n        // 已发过\n        routeList = [\n          {\n            path: '/',\n            commponent: CardList\n          }\n        ]\n      } else {\n        // 没发过\n        routeList = [\n          {\n            path: '/',\n            commponent: CardInput\n          },\n          {\n            path: '/cardList',\n            commponent: CardList\n          }\n        ]\n      }\n      this.setState({\n        routeList\n      })\n    })\n  }\n\n  render() {\n    const { classes } = this.props\n    const { routeList } = this.state\n\n    return (\n      <Router>\n        <div className={classes.root}>\n          <Switch>\n            {\n              routeList.map(item => (\n                <Route key={item.path} path={item.path} exact component={item.commponent} />\n              ))\n            }\n            {/* <Route path=\"/\" exact component={Welcome} />\n            <Route path=\"/cardInput\" exact component={CardInput} />\n            <Route path=\"/cardList\" exact component={CardList} /> */}\n            <Redirect from=\"*\" to=\"/\" />\n          </Switch>\n          <CommonFooter />\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default withStyles(styles)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}